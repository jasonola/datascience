#   dplyr::pull(CONTINENT) %>%
#   get_countries_by_continent() %>%
#   setdiff(choice1) %>%
#   sample(1)
# choice3 <- get_country_row(choice1) %>%
#   dplyr::pull(CONTINENT) %>%
#   get_countries_by_continent() %>%
#   setdiff(c(choice1,choice2)) %>%
#   sample(1)
#
# choice4 <- get_country_row(choice1) %>%
#   dplyr::pull(CONTINENT) %>%
#   get_countries_by_continent() %>%
#   setdiff(c(choice1,choice2,choice3)) %>%
#   sample(1)
return(
c(choice1#, choice2, choice3, choice4
)
)
}
world <- get_world_data() %>%
dplyr::filter(!CONTINENT %in% c("Seven seas (open ocean)","Antarctica"))
capitals <- get_capitals_data()
world_countries <- world %>%
dplyr::filter(!is.na(capital)) %>%
dplyr::pull(ADMIN)
world <- world %>%
dplyr::left_join(capitals, by = c("GU_A3" = "iso3"))
#' The application server-side
#'
#' @param input,output,session Internal parameters for {shiny}.
#'     DO NOT REMOVE.
#' @import shiny
#' @noRd
app_server <- function( input, output, session ) {
# Your application server logic
mod_game_server("game_ui_1")
}
#' The application User-Interface
#'
#' @param request Internal parameter for `{shiny}`.
#'     DO NOT REMOVE.
#' @import shiny
#' @noRd
app_ui <- function(request) {
tagList(
# Leave this function for adding external resources
golem_add_external_resources(),
# Your application UI logic
fluidPage(
h1("geogame"),
mod_game_ui("game_ui_1")
)
)
}
#' Add external Resources to the Application
#'
#' This function is internally used to add external
#' resources inside the Shiny application.
#'
#' @import shiny
#' @importFrom golem add_resource_path activate_js favicon bundle_resources
#' @noRd
golem_add_external_resources <- function(){
add_resource_path(
'www', app_sys('app/www')
)
tags$head(
favicon(),
bundle_resources(
path = app_sys('app/www'),
app_title = 'geogame'
)
# Add here other external resources
# for example, you can add shinyalert::useShinyalert()
)
}
library(geogame)
run_app()
run_app()
library(geogame)
run_app()
library(geogame)
run_app()
library(geogame)
run_app()
library(geogame)
run_app()
library(geogame)
run_app()
library(geogame)
run_app()
library(geogame)
run_app()
library(geogame)
run_app()
get_countries_by_continent("France")
get_countries_by_continent("Africa")
get_countries_by_continent("Europe")
get_country_row("France")
get_country_row("France") %>% dplyr::pull(CONTINENT)
get_country_row("France") %>% dplyr::pull(CONTINENT) %>% get_countries_by_continent()
library(geogame)
run_app()
devtools::load_all()
run_app()
library(geogame)
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
devtools::load_all()
run_app()
shuffle_choices_cap <- function() {
choice1 <- sample(world_countries, 1)
print(choice1)
choice2 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(choice1) %>%
sample(1)
choice3 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2)) %>%
sample(1)
choice4 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2,choice3)) %>%
sample(1)
return(
c(choice1, choice2, choice3, choice4)
)
}
shuffle_choices_cap()
shuffle_choices_cap <- function() {
choice1 <- sample(world_countries, 1) %>%
get_country_row()
print(choice1)
choice2 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(choice1) %>%
sample(1)
choice3 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2)) %>%
sample(1)
choice4 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2,choice3)) %>%
sample(1)
return(
c(choice1, choice2, choice3, choice4)
)
}
shuffle_choices_cap()
shuffle_choices_cap <- function() {
choice1 <- sample(world_countries, 1) %>%
get_country_row() %>%
pull(city)
print(choice1)
choice2 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(choice1) %>%
sample(1)
choice3 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2)) %>%
sample(1)
choice4 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2,choice3)) %>%
sample(1)
return(
c(choice1, choice2, choice3, choice4)
)
}
shuffle_choices_cap()
shuffle_choices_cap <- function() {
choice1 <- sample(world_countries, 1) %>%
get_country_row() %>%
dplyr::pull(city)
print(choice1)
choice2 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(choice1) %>%
sample(1)
choice3 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2)) %>%
sample(1)
choice4 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2,choice3)) %>%
sample(1)
return(
c(choice1, choice2, choice3, choice4)
)
}
shuffle_choices_cap()
shuffle_choices_cap <- function() {
choice1 <- sample(world_countries, 1) %>%
get_country_row() %>%
dplyr::pull(city)
print(choice1)
choice2 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(choice1) %>%
sample(1)
choice3 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2)) %>%
sample(1)
choice4 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2,choice3)) %>%
sample(1)
return(
c(choice1, choice2, choice3, choice4)
)
}
shuffle_choices_cap <- function() {
choice1 <- sample(world_countries, 1) %>%
get_country_row() %>%
dplyr::pull(city)
print(choice1)
choice2 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(choice1) %>%
sample(1)
choice3 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2)) %>%
sample(1)
choice4 <- get_country_row(choice1) %>%
dplyr::pull(CONTINENT) %>%
get_countries_by_continent() %>%
setdiff(c(choice1,choice2,choice3)) %>%
sample(1)
return(
c(choice1, choice2, choice3, choice4)
)
}
shuffle_choices_cap()
shuffle_choices_cap <- function() {
rand_country <- sample(world_countries, 1)
choice1 <- rand_country %>%
get_country_row() %>%
dplyr::pull(city)
print(choice1)
choice2 <- get_country_row(rand_country) %>%
dplyr::pull(CONTINENT) %>%
get_capitals_by_continent() %>%
setdiff(choice1) %>%
sample(1)
choice3 <- get_country_row(rand_country) %>%
dplyr::pull(CONTINENT) %>%
get_capitals_by_continent() %>%
setdiff(c(choice1,choice2)) %>%
sample(1)
choice4 <- get_country_row(rand_country) %>%
dplyr::pull(CONTINENT) %>%
get_capitals_by_continent() %>%
setdiff(c(choice1,choice2,choice3)) %>%
sample(1)
return(
c(choice1, choice2, choice3, choice4)
)
}
shuffle_choices_cap()
get_capitals_by_continent <- function(continent){
world %>%
dplyr::filter(CONTINENT == continent) %>%
dplyr::pull(city)
}
get_capitals_by_continent <- function(continent){
world %>%
dplyr::filter(CONTINENT == continent) %>%
dplyr::pull(city)
}
shuffle_choices_cap <- function() {
rand_country <- sample(world_countries, 1)
choice1 <- rand_country %>%
get_country_row() %>%
dplyr::pull(city)
print(choice1)
choice2 <- get_country_row(rand_country) %>%
dplyr::pull(CONTINENT) %>%
get_capitals_by_continent() %>%
setdiff(choice1) %>%
sample(1)
choice3 <- get_country_row(rand_country) %>%
dplyr::pull(CONTINENT) %>%
get_capitals_by_continent() %>%
setdiff(c(choice1,choice2)) %>%
sample(1)
choice4 <- get_country_row(rand_country) %>%
dplyr::pull(CONTINENT) %>%
get_capitals_by_continent() %>%
setdiff(c(choice1,choice2,choice3)) %>%
sample(1)
return(
c(choice1, choice2, choice3, choice4)
)
}
shuffle_choices_cap()
golem::add_module( name = "capitals" ) # Name of the module
shuffle_choices_cap <- function() {
rand_country <- sample(world_countries, 1)
choice1 <- rand_country %>%
get_country_row() %>%
dplyr::pull(city)
print(choice1)
choice2 <- get_country_row(rand_country) %>%
dplyr::pull(CONTINENT) %>%
get_capitals_by_continent() %>%
setdiff(choice1) %>%
sample(1)
choice3 <- get_country_row(rand_country) %>%
dplyr::pull(CONTINENT) %>%
get_capitals_by_continent() %>%
setdiff(c(choice1,choice2)) %>%
sample(1)
choice4 <- get_country_row(rand_country) %>%
dplyr::pull(CONTINENT) %>%
get_capitals_by_continent() %>%
setdiff(c(choice1,choice2,choice3)) %>%
sample(1)
return(
c(rand_country, choice1, choice2, choice3, choice4)
)
}
devtools::load_all()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
world_countries
devtools::load_all()
run_app()
devtools::load_all()
run_app()
get_info_map <- function(selected_countries){
world %>%
ggplot2::ggplot()+
ggplot2::geom_sf()+
ggplot2::geom_sf(data = world %>% dplyr::filter(ADMIN %in% selected_countries),
fill = "blue")+
ggplot2::theme_void()
}
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
get_info_table <- function(selected_countries){
world %>%
filter(ADMIN %in% selected_countries) %>%
as_tibble() %>%
select(
"ISO" = GU_A3,
"Country name" = ADMIN,
"Capital" = city,
"Population" = POP_EST,
"GDP" = GDP_MD_EST,
"Continent" = CONTINENT
) %>%
datatable(options = list(
searching = F,
info = F
),
rownames = F)
}
devtools::load_all()
run_app()
get_info_table <- function(selected_countries){
world %>%
dplyr::filter(ADMIN %in% selected_countries) %>%
tibble::as_tibble() %>%
dplyr::select(
"ISO" = GU_A3,
"Country name" = ADMIN,
"Capital" = city,
"Population" = POP_EST,
"GDP" = GDP_MD_EST,
"Continent" = CONTINENT
) %>%
DT::datatable(options = list(
searching = F,
info = F
),
rownames = F)
}
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
library(geogame)
run_app()
devtools::load_all()
run_app()
library(geogame)
run_app()
devtools::load_all()
run_app()
library(geogame)
run_app()
devtools::load_all()
run_app()
run_app()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
run_app()
devtools::load_all()
run_app()
golem::add_module( name = "style" )
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
devtools::load_all()
run_app()
golem::add_css_file( "custom" )
